x Implement tilemaps
    x Solid Colors
x Implement Camera
    x Programmatic Interface
x Provide Stable Framerate
x Implement Objects
    x Blit at arbitrary location
    x Programmatic Movement controls
    x User Interface to Movement controls
    x Hook player movement up to Camera
x Add other random NPCs
x Make NPCs move randomly
x Add sword entity (axis-aligned rectangle only)
x Refine Actor / Entity System
    x Implement Root Actor
    x Implement NPC Actor
    x Implement Player Actor
    x Implement Sword Actor
    x Implement message hoisting
    x Implement Camera Actor
        x send messages to conform to camera API
        x Separate camera PODS from Camera interface
    x Implement Tilemap Actor
        x Improve selective tile blitting
        x separate PODS from actor
    x Anything else that needs to be switched over
    x Profile performance before and after refactor
        x 7.4 ms/frame => 5.4 ms/frame :D
- Implement damage
    x Sword hoists damage message
    x Implement brief invincibility period
    - Implement damage animation
        x movement
        x add force to damage message
        x add skid function to bounceback
        x color
    x factor out bounceback functionality for use with player actor
    - player takes damage
    - take magnitude of force into account
    - NPCs knock into each other
        - figure out how to test easily
    - refactor
- Implement unit test harness
- Implement actor logging
- Implement collision detection
- Add utilities to make actors less painful
- Determine Other Mechanics
- Determine how well our concurrency is working
- Add Networking
- Map Generation
- replace pygame rendering with opengl rendering
    - add texture infrastructure
    - adding lighting infrastructure
- add textures
